{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialCartState = {\n  showCart: false,\n  products: 0,\n  items: []\n};\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState: initialCartState,\n  reducers: {\n    toggleCart(state) {\n      state.showCart = !state.showCart;\n    },\n    addProduct(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.items.find(item => item.id === newItem.id);\n      if (!existingItem) {\n        state.items.push({\n          itemId: newItem.id,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price,\n          name: newItem.title\n        });\n      } else {\n        existingItem.quantity++;\n        existingItem.totalPrice = existingItem.totalPrice + newItem.price;\n      }\n    },\n    minusProduct(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.items.find(item => item.id === newItem.id);\n      if (existingItem.quantity === 1) {\n        items.pop();\n      }\n    }\n  }\n});\nexport const cartActions = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","initialCartState","showCart","products","items","cartSlice","name","initialState","reducers","toggleCart","state","addProduct","action","newItem","payload","existingItem","find","item","id","push","itemId","price","quantity","totalPrice","title","minusProduct","pop","cartActions","actions","reducer"],"sources":["/Users/wenghaishi/Desktop/code/react/advanced-redux/src/store/cart.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nconst initialCartState = { showCart: false, products: 0, items: [] };\n\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState: initialCartState,\n  reducers: {\n    toggleCart(state) {\n      state.showCart = !state.showCart;\n    },\n    addProduct(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.items.find((item) => item.id === newItem.id);\n      if (!existingItem) {\n        state.items.push({\n          itemId: newItem.id,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price,\n          name: newItem.title,\n        });\n      } else {\n        existingItem.quantity++;\n        existingItem.totalPrice = existingItem.totalPrice + newItem.price;\n      }\n    },\n    minusProduct(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.items.find((item) => item.id === newItem.id);\n      if (existingItem.quantity === 1) {\n        items.pop()\n      }\n    },\n  },\n});\n\nexport const cartActions = cartSlice.actions;\nexport default cartSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,MAAMC,gBAAgB,GAAG;EAAEC,QAAQ,EAAE,KAAK;EAAEC,QAAQ,EAAE,CAAC;EAAEC,KAAK,EAAE;AAAG,CAAC;AAEpE,MAAMC,SAAS,GAAGL,WAAW,CAAC;EAC5BM,IAAI,EAAE,MAAM;EACZC,YAAY,EAAEN,gBAAgB;EAC9BO,QAAQ,EAAE;IACRC,UAAUA,CAACC,KAAK,EAAE;MAChBA,KAAK,CAACR,QAAQ,GAAG,CAACQ,KAAK,CAACR,QAAQ;IAClC,CAAC;IACDS,UAAUA,CAACD,KAAK,EAAEE,MAAM,EAAE;MACxB,MAAMC,OAAO,GAAGD,MAAM,CAACE,OAAO;MAC9B,MAAMC,YAAY,GAAGL,KAAK,CAACN,KAAK,CAACY,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKL,OAAO,CAACK,EAAE,CAAC;MACvE,IAAI,CAACH,YAAY,EAAE;QACjBL,KAAK,CAACN,KAAK,CAACe,IAAI,CAAC;UACfC,MAAM,EAAEP,OAAO,CAACK,EAAE;UAClBG,KAAK,EAAER,OAAO,CAACQ,KAAK;UACpBC,QAAQ,EAAE,CAAC;UACXC,UAAU,EAAEV,OAAO,CAACQ,KAAK;UACzBf,IAAI,EAAEO,OAAO,CAACW;QAChB,CAAC,CAAC;MACJ,CAAC,MAAM;QACLT,YAAY,CAACO,QAAQ,EAAE;QACvBP,YAAY,CAACQ,UAAU,GAAGR,YAAY,CAACQ,UAAU,GAAGV,OAAO,CAACQ,KAAK;MACnE;IACF,CAAC;IACDI,YAAYA,CAACf,KAAK,EAAEE,MAAM,EAAE;MAC1B,MAAMC,OAAO,GAAGD,MAAM,CAACE,OAAO;MAC9B,MAAMC,YAAY,GAAGL,KAAK,CAACN,KAAK,CAACY,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKL,OAAO,CAACK,EAAE,CAAC;MACvE,IAAIH,YAAY,CAACO,QAAQ,KAAK,CAAC,EAAE;QAC/BlB,KAAK,CAACsB,GAAG,CAAC,CAAC;MACb;IACF;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAMC,WAAW,GAAGtB,SAAS,CAACuB,OAAO;AAC5C,eAAevB,SAAS,CAACwB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}